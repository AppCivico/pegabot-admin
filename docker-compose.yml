version: "2"
networks:
  directus:
  redis:
services:
  app:
    container_name: pegabot-admin-app
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "3150:3150"
    expose: 
      - "3150"
    volumes:
      - .:/home/node/app_pegabots_admin
      - /home/node/app_pegabots_admin/node_modules
    networks:
      - directus
      - redis
    restart: unless-stopped
  api:
    container_name: pegabot-admin-api
    build:
      context: ./api
      dockerfile: ./Dockerfile
    ports:
      - "3100:1337"
    expose: 
      - "3100"
    volumes:
      - .:/home/node/app_pegabots_api
      - /home/node/app_pegabots_api/node_modules
    networks:
      - directus
    restart: unless-stopped
  mysql:
    image: mysql:5.7
    container_name: pegabot-mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - directus
    restart: unless-stopped
  directus:
    image: directus/directus:v8-apache
    container_name: pegabot-directus
    ports:
      - "${DIRECTUS_PORT}:80"
    environment:
      DIRECTUS_APP_ENV: ${NODE_ENV}
      DIRECTUS_AUTH_PUBLICKEY: ${DIRECTUS_AUTH_PUBLICKEY}
      DIRECTUS_AUTH_SECRETKEY: ${DIRECTUS_AUTH_SECRETKEY}
      DIRECTUS_DATABASE_HOST: "mysql"
      DIRECTUS_DATABASE_PORT: "3306"
      DIRECTUS_DATABASE_NAME: ${DIRECTUS_DATABASE_NAME}
      DIRECTUS_DATABASE_USERNAME: ${DIRECTUS_DATABASE_USERNAME}
      DIRECTUS_DATABASE_PASSWORD: ${DIRECTUS_DATABASE_PASSWORD}
    volumes:
      - ./data/config:/var/directus/config
      - ./data/uploads:/var/directus/public/uploads    
    networks:
      - directus
    restart: unless-stopped
  redis:
    image: "redis"
    container_name: pegabot-redis
    command: "redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}"
    volumes:
    - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
     - "${REDIS_PORT}:${REDIS_PORT}"
    restart: unless-stopped
    networks:
      - redis
